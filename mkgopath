#!/bin/bash

PACKAGES=(
	github.com/golang/dep/cmd/dep
	github.com/ramya-rao-a/go-outline
	github.com/acroca/go-symbols
	github.com/mdempsky/gocode
	github.com/rogpeppe/godef
	golang.org/x/tools/cmd/godoc
	github.com/zmb3/gogetdoc
	github.com/golang/lint/golint
	github.com/fatih/gomodifytags
	golang.org/x/tools/cmd/gorename
	sourcegraph.com/sqs/goreturns
	golang.org/x/tools/cmd/goimports
	github.com/cweill/gotests/...
	golang.org/x/tools/cmd/guru
	github.com/josharian/impl
	github.com/haya14busa/goplay/cmd/goplay
	github.com/uudashr/gopkgs/cmd/gopkgs
	github.com/davidrjenni/reftools/cmd/fillstruct
	github.com/alecthomas/gometalinter
)

GO=$(command -v go)

if ! [ -x "$GO" ]; then
	echo 'Error: go is not installed.' >&2
	exit 1
fi

if [ "$#" -ne 1 ]; then
    cat << EOF
Usage: $0 GOPATH
$0 generates a GOPATH and install some useful tools into it.
EOF
	exit 1
fi

GOPATH=$(pwd)/${1}
GOBIN=${GOPATH}/bin

export GOPATH
export GOBIN

if [ ! -d "$GOPATH" ]; then
  mkdir "$GOPATH"
fi

cat << EOF > "$GOPATH"/env.sh
#!/bin/bash

export GOPATH="${GOPATH}"

export GOBIN="\${GOPATH}/bin"

PATH="\$PATH:\$GOBIN"
EOF

for i in "${PACKAGES[@]}"; do
	$GO get -u -v "$i"
done

if [ -f "${GOBIN}/gometalinter" ]; then
	"${GOBIN}/gometalinter" --install
fi

unset GOBIN
unset GOPATH
